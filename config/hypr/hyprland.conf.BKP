# This is an example Hyprland config file.
#
# Refer to the wiki for more information.

# Some default env vars.
# toolkit-specific scale
env = GDK_SCALE,2
env = XCURSOR_SIZE,32
env = gtk-cursor-theme-size,32
env = XCURSOR_THEME,volantes_cursors
env = gtk-cursor-theme-name,volantes_cursors
env = GTK_THEME,FF-DarkWoodGold
#env = GTK_THEME_VARIANT,dark
env = XDG_SESSION_TYPE,wayland
env = XDG_CURRENT_DESKTOP,Hyprland
env = QT_QPA_PLATFORM,xcb
env = MOZ_ENABLE_WAYLAND,1
env = GDK_BACKEND,wayland
env = WB_AUTOSTART_ENVIRONMENT,GNOME:KDE
#env = GTK_RC_FILES,"${HOME}/.config/gtk-3.0/settings.ini"
#env = GTK2_RC_FILES,"${HOME}/.gtkrc-2.0"
#env = gtk-theme-name,FF-DarkWoodGold
#env = gtk-icon-theme-name,Faenza
#env = gtk-font-name,Sans 12
#env = gtk-toolbar-style,GTK_TOOLBAR_ICONS
#env = gtk-toolbar-icon-size,GTK_ICON_SIZE_LARGE_TOOLBAR
#env = gtk-button-images,1
#env = gtk-menu-images,0
#env = gtk-enable-event-sounds,1
#env = gtk-enable-input-feedback-sounds,0
#env = gtk-xft-antialias,1
#env = gtk-xft-hinting,0
#env = gtk-xft-hintstyle,hintfull
#env = gtk-modules,gail:atk-bridge
#env = gtk-application-prefer-dark-theme,1

# Autostart
# Execute your favorite apps at launch
# https://wiki.hyprland.org/FAQ/#how-do-i-autostart-my-favorite-apps
# exec-once = waybar & hyprpaper & firefox
exec-once=hyprctl keyword monitor "eDP-1, 1920x1080, 0x0, 1" &
exec-once=swww init & bash <(sleep 2; swww img "$(find ${HOME}/Pictures/Wallpapers/ -name '*[jJpP][nNpP][gG]' | shuf -n1)") &
exec-once=pulseaudio --start &
exec-once=swayidle before-sleep swaylock &
exec-once=/usr/lib/xdg-desktop-portal &
exec-once=systemctl --user import-environment WAYLAND_DISPLAY &
exec-once=dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP XDG_SESSION_TYPE #dbus-update-activation-environment --systemd --all &
exec-once=gdbus call --session --dest org.freedesktop.DBus --object-path /org/freedesktop/Dbus --method org.freedesktop.DBus.ListNames &
# WAYBAR last APP for start with persistent PID
exec-once=bash -c "while true; do sleep 5; nwg_panel=`pidof nwg-panel`; if [ -z ${nwg_panel} ]; then nwg-panel; fi; done" &
# sets xwayland scale
exec-once=xprop -root -f _XWAYLAND_GLOBAL_OUTPUT_SCALE 32c -set _XWAYLAND_GLOBAL_OUTPUT_SCALE 2

#
# Please note not all available settings / options are set here.
# For a full list, see the wiki
#

# See https://wiki.hyprland.org/Configuring/Monitors/
# List Monitors:
#hyprctl monitors
monitor=,preferred,auto,auto
#monitor=DP-1,1920x1080,0x0,1
# DPMS
# https://wiki.hyprland.org/Configuring/Dispatchers/
# hyprctl dispatch dpms off DP-1
# swayidle

# See https://wiki.hyprland.org/Configuring/Keywords/ for more

# Source a file (multi-file configs)
# source = ~/.config/hypr/myColors.conf

# For all categories, see https://wiki.hyprland.org/Configuring/Variables/
input {
    kb_layout = br
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =

    # https://wiki.hyprland.org/Configuring/Basic-Config/s
    numlock_by_default = true

    follow_mouse = 1

    touchpad {
        natural_scroll = false
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

general {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    gaps_in = 2 #5
    gaps_out = 2 #20
    border_size = 2
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.inactive_border = rgba(595959aa)

    layout = dwindle
}

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    rounding = 10
    blur = true
    blur_size = 3
    blur_passes = 1
    blur_new_optimizations = true

    drop_shadow = true
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
}

animations {
    enabled = true

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

dwindle {
    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
    pseudotile = true # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true # you probably want this
}

master {
    # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
    new_is_master = true
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = false
}

# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#executing for more
device:epic-mouse-v1 {
    sensitivity = -0.5
}

# Example windowrule v1
# windowrule = float, ^(kitty)$
# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more

# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER
$mainAlt = ALT
$mainCtr = CTRL
$mainSft = SHIFT

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/
#                    https://wiki.hyprland.org/Configuring/Advanced-config/

bind = $mainMod, T, exec, kitty
bind = $mainMod $mainCtr, F, exec, bash -c 'firefox=`pidof firefox`; if [ -n "$firefox" ]; then xdotool search "Mozilla Firefox" windowactivate    300  --sync key --clearmodifiers ctrl+l; else nohup firefox; /dev/null; sleep 4; exec xdotool key alt+3; fi'
bind=, XF86HomePage, exec, xdg-open ~/
bind = $mainMod, N, exec, xdg-open ~/
bind = $mainMod, F, togglefloating,
bind = $mainMod, A, fullscreen,
bind = $mainMod, Q, exec, hyprctl kill
bind = $mainMod $mainCtr, S, splitratio,
bind = $mainMod $mainCtr, R, exec, hyprctl reload && hyprctl keyword monitor "eDP-1, 1920x1080, 0x0, 1" #forcerendererreload,
bind = $mainMod, O, toggleopaque,
bind = $mainAlt, Tab, cyclenext,          # change focus to another window
bind = $mainAlt, Tab, bringactivetotop,   # bring it to the top
bind = $mainAlt, F4, killactive,
bind = $mainCtr, F4, closewindow,
bind = $mainMod, M, exit,
bind = $mainCtr $mainAlt, Backspace, exit,
bind = $mainCtr, F1, exec, kitty -e bash -c 'ccat --color=always ~/.config/openbox/rc.xml | less -i -R -N --use-color --color=HBCEMNPRSWsu'
bind = $mainMod, X, exec, ~/.config/rofi/rofimenu2.sh
bind = $mainMod, Z, exec, rofi -show drun -font "Poppins 13"
bind = $mainAlt, F1, exec, bash -c "rm ~/.jgmenu-lockfile ; jgmenu"
bind = $mainAlt, F2, exec, rofi -no-lazy-grab -show drun -modi drun -theme ~/.config/rofi/launchers/misc/row_dock.rasi
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle
bind = $mainMod $mainCtr, 1, exec, hyprctl keyword monitor "eDP-1, 1600x900, 0x0, 1"
bind = $mainMod $mainCtr, 2, exec, hyprctl keyword monitor "eDP-1, 1920x1080, 0x0, 1"
bind = $mainCtr $mainAlt, W, exec, swww img "$(find ${HOME}/Pictures/Wallpapers/ -name '*[jJpP][nNpP][gG]' | shuf -n1)"
# PRINT
bind=, Print, exec, bash -c 'play ~/.local/songs/camera_shutter.mp3 ; grim "${HOME}/Pictures/Captura de Tela/Captura de tela de $(date +"%d-%m-%Y %H:%M:%S").png" - | wl-copy'
# VOLUME
bind=, XF86AudioMute, exec, pactl set-sink-mute @DEFAULT_SINK@ toggle
bind = $mainSft $mainAlt, M, exec, pactl set-sink-mute @DEFAULT_SINK@ toggle
# Example volume button that allows press and hold, volume limited to 150%
bind=, XF86AudioRaiseVolume, exec, bash -c "pactl set-sink-volume @DEFAULT_SINK@ +5%; pkill -9 osd_cat; xrefresh; echo Volume:\ `pactl list sinks | grep '^[[:space:]]Volume:' | head -n $(( $SINK + 1 )) | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,'` | osd_cat -d 1 -s 1 -A center -l 1 -p middle -o 60 -c green -f '-*-helvetica-bold-*-*-*-44-*-*-*-*-*-*'"
bind = $mainSft $mainAlt, Up, exec, bash -c "pactl set-sink-volume @DEFAULT_SINK@ +5%; pkill -9 osd_cat; xrefresh; echo Volume:\ `pactl list sinks | grep '^[[:space:]]Volume:' | head -n $(( $SINK + 1 )) | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,'` | osd_cat -d 1 -s 1 -A center -l 1 -p middle -o 60 -c green -f '-*-helvetica-bold-*-*-*-44-*-*-*-*-*-*'"
# Example volume button that will activate even while an input inhibitor is active
bind=, XF86AudioLowerVolume, exec, bash -c "pactl set-sink-volume @DEFAULT_SINK@ -5%; pkill -9 osd_cat; xrefresh; echo Volume:\ `pactl list sinks | grep '^[[:space:]]Volume:' | head -n $(( $SINK + 1 )) | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,'` | osd_cat -d 1 -s 1 -A center -l 1 -p middle -o 60 -c green -f '-*-helvetica-bold-*-*-*-44-*-*-*-*-*-*'"
bind = $mainSft $mainAlt, Down, exec, bash -c "pactl set-sink-volume @DEFAULT_SINK@ -5%; pkill -9 osd_cat; xrefresh; echo Volume:\ `pactl list sinks | grep '^[[:space:]]Volume:' | head -n $(( $SINK + 1 )) | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,'` | osd_cat -d 1 -s 1 -A center -l 1 -p middle -o 60 -c green -f '-*-helvetica-bold-*-*-*-44-*-*-*-*-*-*'"
# POWER
bind = $mainCtr $mainAlt, D, exec, bash -c "/bin/openrc-shutdown --poweroff now ; systemctl -i poweroff"
bind = $mainCtr $mainAlt, H, exec, bash -c "systemctl hibernate"
# LOCK
bind = $mainCtr $mainAlt, L, exec, swaylock
# WINE
bind = $mainMod $mainCtr, W, exec, bash -c "eval $(ps ax|egrep '*\.exe'|grep -v 'egrep'|awk '{print $1 }' | xargs kill -9 $1 ; pkill -9 .exe)"
# Correcting errors
bind = $mainMod $mainCtr, E, exec, bash -c 'xrefresh; pulseaudio -k; wmctrl -l; pulseaudio --start; zenity --title "Correcting errors" --error --ellipsize --text "Correcting errors:\n\nSound, video, WM..."'
# Mouse Scroll
bind = $mainMod, W, exec, wlrctl pointer scroll -40 0 # xdotool click 4
bind = $mainMod, S, exec, wlrctl pointer scroll 40 0 # xdotool click 5
# Move Mouse
bind = $mainMod, up, exec, wlrctl pointer move 0 -10
bind = $mainMod $mainCtr, up, exec, wlrctl pointer move 0 -40
bind = $mainMod, down, exec, wlrctl pointer move 0 10
bind = $mainMod $mainCtr, down, exec, wlrctl pointer move 0 40
bind = $mainMod, left, exec, wlrctl pointer move -10 0
bind = $mainMod $mainCtr, left, exec, wlrctl pointer move -40 0
bind = $mainMod, right, exec, wlrctl pointer move 10 0
bind = $mainMod $mainCtr, right, exec, wlrctl pointer move 40 0


# Move focus with mainMod + arrow keys
bind = $mainMod, j, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, i, movefocus, u
bind = $mainMod, k, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
bindm = $mainMod, R, resizewindow
