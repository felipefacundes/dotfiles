#!/bin/bash
# Path to your oh-my-bash installation.
export OSH=/data/data/com.termux/files/home/.oh-my-bash

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-bash is loaded.
OSH_THEME="agnoster"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_OSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $OSH/custom?
# OSH_CUSTOM=/path/to/new-custom-folder

# Which completions would you like to load? (completions can be found in ~/.oh-my-bash/completions/*)
# Custom completions may be added to ~/.oh-my-bash/custom/completions/
# Example format: completions=(ssh git bundler gem pip pip3)
# Add wisely, as too many completions slow down shell startup.
completions=(
  git
  composer
  ssh
)

# Which aliases would you like to load? (aliases can be found in ~/.oh-my-bash/aliases/*)
# Custom aliases may be added to ~/.oh-my-bash/custom/aliases/
# Example format: aliases=(vagrant composer git-avh)
# Add wisely, as too many aliases slow down shell startup.
aliases=(
  general
)

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-bash/plugins/*)
# Custom plugins may be added to ~/.oh-my-bash/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  bashmarks
  progress
)

source $OSH/oh-my-bash.sh

# User configuration
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-bash libs,
# plugins, and themes. Aliases can be placed here, though oh-my-bash
# users are encouraged to define aliases within the OSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias bashconfig="mate ~/.bashrc"
# alias ohmybash="mate ~/.oh-my-bash"
##################################################

#prompt_context() {
#  if [[ "$USER" != "$DEFAULT_USER" || -n "$SSH_CLIENT" ]]; then
#    prompt_segment black default "%(!.%{%F{yellow}%}.)$USER"
#  fi
#}

#DEFAULT_USER=$USER

prompt_context() {
  # Custom (Random emoji)
  emojis=("‚ö°Ô∏è" "üî•" "üíÄ" "üëë" "üòé" "üê∏" "üêµ" "ü¶Ñ" "üåà" "üçª" "üöÄ" "üí°" "üéâ" "üîë" "üáπüá≠" "üö¶" "üåô")
  RAND_EMOJI_N=$(( $RANDOM % ${#emojis[@]} + 1))
  prompt_segment black default "${emojis[$RAND_EMOJI_N]} "
}

export HISTFILESIZE=100000
export HISTSIZE=100000
export HISTCONTROL=ignoreboth
export HISTTIMEFORMAT="%F %T "
shopt -s histappend

# Terminal settings
shopt -s checkwinsize
#export PROMPT_COMMAND='history -a'
#export GITAWAREPROMPT=~/.bash/git-aware-prompt
#source $GITAWAREPROMPT/main.sh
export PS1="\[\e[32m\]\t \[$txtgrn\]\u\[$txtwht\]@\[$txtgrn\]\h \[$txtylw\]\w\[$txtrst\] \[$txtcyn\]\$git_branch\[$txtred\]\$git_dirty\[$txtrst\]\n\$ "
#export PATH="$PATH:~/Library/Python/2.7/bin:$HOME/Library/Haskell/bin"
export PATH=$PATH:/sdcard/.bin
export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad
export EDITOR=vim
export VISUAL=vim
#export RBENV_ROOT=/usr/local/var/rbenv

# Aliases
cd /sdcard
alias mv='tput setaf 11; echo -e "mv -v --backup=t\n"; tput setaf 7; mv -v --backup=t'
alias mvd='echo "mv file (date +%d-%m-%Y_%H:%M:%S)"'
alias bkp='ls -v | cat -n | while read n f; do mv -n "$f" "$f.$n"; done'
alias yd="youtube-dl -i"
alias gif="echo 'ffmpeg -i Tela_09-12-2019_14:40:57.mkv -filter_complex '[0:v] palettegen' palette.png ; ffmpeg -ss 00:00:26.00 -t 8 -r 23 -i Tela_09-12-2019_14:40:57.mkv -i palette.png -filter_complex '[0:v][1:v] paletteuse' -pix_fmt rgb24 -s 616x182 GuildWars2.gif'"
alias criargif="echo 'ffmpeg -i Tela_09-12-2019_14:40:57.mkv -filter_complex '[0:v] palettegen' palette.png ; ffmpeg -ss 00:00:26.00 -t 8 -r 23 -i Tela_09-12-2019_14:40:57.mkv -i palette.png -filter_complex '[0:v][1:v] paletteuse' -pix_fmt rgb24 -s 616x182 GuildWars2.gif'"
alias pip-upgrade-all="echo 'sudo pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip install -U' ; sudo pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip install -U"
alias pip-upgrade-all-2="echo 'sudo pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip install -U' ; sudo pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip install -U"
alias mi='tput setaf 6; echo -e "\nA imagem ser√° convertida na resolu√ß√£o desejada.\nPor√©m, antes execute o comando "export resolution=XxY":\nComo exemplo ser√° usada o padr√£o FullHD (1920x1080)\nLembrando que HD √© 1280x720\n4k = 3840x2160\n8k fulldome = 8192√ó8192 (67.1 megapixels)\n"; tput setaf 3; echo "export resolution=1920x1080\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "convert -adaptive-resize $resolution -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0\n"; convert -adaptive-resize "$resolution" -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0'
alias rs='tput setaf 6; echo -e "\nA imagem ser√° convertida na resolu√ß√£o desejada.\nPor√©m, antes execute o comando "export resolution=XxY":\nComo exemplo ser√° usada o padr√£o FullHD (1920x1080)\nLembrando que HD √© 1280x720\n4k = 3840x2160\n8k fulldome = 8192√ó8192 (67.1 megapixels)\n"; tput setaf 3; echo "export resolution=1920x1080\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "convert -adaptive-resize $resolution -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0\n"; convert -adaptive-resize "$resolution" -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0'
alias resize='tput setaf 6; echo -e "\nA imagem ser√° convertida na resolu√ß√£o desejada.\nPor√©m, antes execute o comando "export resolution=XxY":\nComo exemplo ser√° usada o padr√£o FullHD (1920x1080)\nLembrando que HD √© 1280x720\n4k = 3840x2160\n8k fulldome = 8192√ó8192 (67.1 megapixels)\n"; tput setaf 3; echo "export resolution=1920x1080\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "convert -adaptive-resize $resolution -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0\n"; convert -adaptive-resize "$resolution" -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0'
alias 4k='tput setaf 6; echo -e "\nA imagem ser√° convertida na resolu√ß√£o 4k\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0\n"; convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0'
alias 4kj-m='convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0 *.[jJpP][nNpP][gG] -set filename:base "%[basename]" "%[filename:base]-4k.jpg"'
alias 4kp-m='convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0 *.[jJpP][nNpP][gG] -set filename:base "%[basename]" "%[filename:base]-4k.png"'
alias 4kw-m='convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0 *.[jJpP][nNpP][gG] -set filename:base "%[basename]" "%[filename:base]-4k.webp"'
alias 4kj='tput setaf 6; echo -e "\nAs imagens ser√£o convertidas na resolu√ß√£o 4k\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "for i in *.[jJpP][nNpP][gG]; do convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+01 '$i' '${i/.[jJpP][nNpP][gG]/-4k.jpg}'; rm '${i/}'; done\n"; for i in *.[jJpP][nNpP][gG]; do convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+01 $i ${i/.[jJpP][nNpP][gG]/-4k.jpg}; rm ${i/}; done'
alias 4kp='tput setaf 6; echo -e "\nAs imagens ser√£o convertidas na resolu√ß√£o 4k\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "for i in *.[jJpP][nNpP][gG]; do convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+01 '$i' '${i/.[jJpP][nNpP][gG]/-4k.png}'; rm '${i/}'; done\n"; for i in *.[jJpP][nNpP][gG]; do convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+01 $i ${i/.[jJpP][nNpP][gG]/-4k.png}; rm ${i/}; done'
alias 4kw='tput setaf 6; echo -e "\nAs imagens ser√£o convertidas na resolu√ß√£o 4k\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "for i in *.[jJpP][nNpP][gG]; do convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+01 '$i' '${i/.[jJpP][nNpP][gG]/-4k.webp}'; rm '${i/}'; done\n"; for i in *.[jJpP][nNpP][gG]; do convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+01 $i ${i/.[jJpP][nNpP][gG]/-4k.webp}; rm ${i/}; done'
alias vim-remove-space='tput setaf 11; echo -e "Comandos simples para remover espa√ßos em branco indesejados\n-----------------------------------------------------------\nEm uma pesquisa, \s encontra um espa√ßo em branco (um espa√ßo ou uma guia) e \+ encontra uma ou mais ocorr√™ncias.\n\nO comando a seguir exclui qualquer espa√ßo em branco no final de cada linha. Se nenhum espa√ßo em branco for encontrado, nenhuma altera√ß√£o ocorre e o esinalizador significa que nenhum erro √© exibido.\n\n:%s/\s\+$//e\n\nO seguinte exclui qualquer espa√ßo em branco inicial no in√≠cio de cada linha.\n\n:%s/^\s\+//e\n\nMesma coisa (:le = :left = left-align alinhar √† esquerda dado intervalo; % = todas as linhas):\n:%le\n\nCom o mapeamento a seguir, um usu√°rio pode pressionar F5 para excluir todos os espa√ßos em branco √† direita. A vari√°vel _s√© usada para salvar e restaurar o √∫ltimo registro de padr√£o de pesquisa (assim, da pr√≥xima vez que o usu√°rio pressionar n, ele continuar√° sua √∫ltima pesquisa) e :nohl√© usada para desligar o realce da pesquisa (para que os espa√ßos finais n√£o sejam real√ßados enquanto o usu√°rio digita). O esinalizador √© usado no comando substitute para que nenhum erro seja mostrado se o espa√ßo em branco final n√£o for encontrado. Ao contr√°rio de antes, o texto de substitui√ß√£o deve ser especificado para usar o sinalizador necess√°rio.\n\n:nnoremap <silent> <F5> :let _s=@/ <Bar> :%s/\s\+$//e <Bar> :let @/=_s <Bar> :nohl <Bar> :unlet _s <CR>\n\nSe voc√™ quiser remover todas as lihas em branco, use:\n\n:g/^\s*$/d\n\nSe quiser v√≠rgulas. Assim: (:s///) em cada linha (%) para substituir todos (g) os espa√ßos em branco cont√≠nuos (\s\+) por uma v√≠rgula (,). Use:\n\n:%s/\s\+/,/g\n\nOutra maneira de fazer isso:\n\n:%s/\s\{1,}/,/gc\n\nAo converter um arquivo de texto com cabe√ßalhos e campos de texto com espa√ßo. Use:\n\n:%s/\s\{2,}/,/g\n\nRemova espa√ßos no meio da linha, e retire o excesso de tabula√ß√£o:\n\n:%s/\([^ ]\+ \) \+/\1/g\n\nIsso pesquisar√° cada ocorr√™ncia que n√£o tenha preced√™ncia em branco e substituir√° o seguinte conjunto de espa√ßos por apenas um espa√ßo.\nIsso, no entanto, deixar√° um √∫nico espa√ßo √† direita nas linhas que tinham v√°rios espa√ßos √† direita. Para corrigir isso, use o comando:\n\n:%s/ *$//"'
alias fonts-local="echo /data/data/com.termux/files/usr/share/fonts/TTF"
alias fonts="cd /data/data/com.termux/files/usr/share/fonts/TTF"
alias so="source /data/data/com.termux/files/home/.zshrc"
alias home-local="echo /data/data/com.termux/files/home"
alias home="cd /data/data/com.termux/files/home"
alias sdcard="cd /sdcard"
alias down="cd /sdcard/Download"
alias d="cd /sdcard/Download"
alias p="catt play_toggle"
alias c="catt cast"
alias s="catt save"
alias r="catt restore"
#alias vim="kak"
alias cs="catt stop"
alias r="catt rewind 60"
alias up="apt update && apt upgrade"
alias ud="apt update"
alias upd="apt update"
alias ug="apt upgrade"
alias upg="apt upgrade"
alias e="exit"
alias myssh="echo ssh facundes@192.168.1.66 ; ssh facundes@192.168.1.66"
alias sshrdp="echo ssh -qnN -L 3389:127.0.0.1
:3389 192.168.1.66
 ; ssh -qnN -L 3389:127.0.0.1
:3389 192.168.1.66
"
alias myssh="echo ssh facundes@192.168.1.66 ; ssh facundes@192.168.1.66"
alias igjssh="echo ssh facundes@192.168.1.84 ; ssh facundes@192.168.1.84"
alias rsync2ssh="echo rsync -avzh /sdcard/rsync facundes@192.168.1.66:/home/facundes ; rsync -avzh /sdcard/rsync facundes@192.168.1.66:/home/facundes"
alias ssh2send="echo scp file user@ip.x.x.x:/home/facundes"
