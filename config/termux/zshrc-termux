#!/bin/bash
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/data/data/com.termux/files/home/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=()

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
export PATH=$PATH:/sdcard/.bin
export EDITOR=vim
export VISUAL=vim
cd /sdcard
alias mv='tput setaf 11; echo -e "mv -v --backup=t\n"; tput setaf 7; mv -v --backup=t'
alias mvd='echo "mv file (date +%d-%m-%Y_%H:%M:%S)"'
alias bkp='ls -v | cat -n | while read n f; do mv -n "$f" "$f.$n"; done'
alias yd="youtube-dl -i"
alias gif="echo 'ffmpeg -i Tela_09-12-2019_14:40:57.mkv -filter_complex '[0:v] palettegen' palette.png ; ffmpeg -ss 00:00:26.00 -t 8 -r 23 -i Tela_09-12-2019_14:40:57.mkv -i palette.png -filter_complex '[0:v][1:v] paletteuse' -pix_fmt rgb24 -s 616x182 GuildWars2.gif'"
alias criargif="echo 'ffmpeg -i Tela_09-12-2019_14:40:57.mkv -filter_complex '[0:v] palettegen' palette.png ; ffmpeg -ss 00:00:26.00 -t 8 -r 23 -i Tela_09-12-2019_14:40:57.mkv -i palette.png -filter_complex '[0:v][1:v] paletteuse' -pix_fmt rgb24 -s 616x182 GuildWars2.gif'"
alias pip-upgrade-all="echo 'sudo pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip install -U' ; sudo pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip install -U"
alias pip-upgrade-all-2="echo 'sudo pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip install -U' ; sudo pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 sudo pip install -U"
alias mi='tput setaf 6; echo -e "\nA imagem será convertida na resolução desejada.\nPorém, antes execute o comando "export resolution=XxY":\nComo exemplo será usada o padrão FullHD (1920x1080)\nLembrando que HD é 1280x720\n4k = 3840x2160\n8k fulldome = 8192×8192 (67.1 megapixels)\n"; tput setaf 3; echo "export resolution=1920x1080\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "convert -adaptive-resize $resolution -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0\n"; convert -adaptive-resize "$resolution" -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0'
alias rs='tput setaf 6; echo -e "\nA imagem será convertida na resolução desejada.\nPorém, antes execute o comando "export resolution=XxY":\nComo exemplo será usada o padrão FullHD (1920x1080)\nLembrando que HD é 1280x720\n4k = 3840x2160\n8k fulldome = 8192×8192 (67.1 megapixels)\n"; tput setaf 3; echo "export resolution=1920x1080\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "convert -adaptive-resize $resolution -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0\n"; convert -adaptive-resize "$resolution" -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0'
alias resize='tput setaf 6; echo -e "\nA imagem será convertida na resolução desejada.\nPorém, antes execute o comando "export resolution=XxY":\nComo exemplo será usada o padrão FullHD (1920x1080)\nLembrando que HD é 1280x720\n4k = 3840x2160\n8k fulldome = 8192×8192 (67.1 megapixels)\n"; tput setaf 3; echo "export resolution=1920x1080\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "convert -adaptive-resize $resolution -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0\n"; convert -adaptive-resize "$resolution" -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0'
alias 4k='tput setaf 6; echo -e "\nA imagem será convertida na resolução 4k\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0\n"; convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0'
alias 4kj-m='convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0 *.[jJpP][nNpP][gG] -set filename:base "%[basename]" "%[filename:base]-4k.jpg"'
alias 4kp-m='convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0 *.[jJpP][nNpP][gG] -set filename:base "%[basename]" "%[filename:base]-4k.png"'
alias 4kw-m='convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+0 *.[jJpP][nNpP][gG] -set filename:base "%[basename]" "%[filename:base]-4k.webp"'
alias 4kj='tput setaf 6; echo -e "\nAs imagens serão convertidas na resolução 4k\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "for i in *.[jJpP][nNpP][gG]; do convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+01 '$i' '${i/.[jJpP][nNpP][gG]/-4k.jpg}'; rm '${i/}'; done\n"; for i in *.[jJpP][nNpP][gG]; do convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+01 $i ${i/.[jJpP][nNpP][gG]/-4k.jpg}; rm ${i/}; done'
alias 4kp='tput setaf 6; echo -e "\nAs imagens serão convertidas na resolução 4k\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "for i in *.[jJpP][nNpP][gG]; do convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+01 '$i' '${i/.[jJpP][nNpP][gG]/-4k.png}'; rm '${i/}'; done\n"; for i in *.[jJpP][nNpP][gG]; do convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+01 $i ${i/.[jJpP][nNpP][gG]/-4k.png}; rm ${i/}; done'
alias 4kw='tput setaf 6; echo -e "\nAs imagens serão convertidas na resolução 4k\n"; tput setaf 9; echo -e "Comando a ser executado:\n"; tput setaf 3; echo -e "for i in *.[jJpP][nNpP][gG]; do convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+01 '$i' '${i/.[jJpP][nNpP][gG]/-4k.webp}'; rm '${i/}'; done\n"; for i in *.[jJpP][nNpP][gG]; do convert -adaptive-resize 3840x2160 -contrast-stretch 0,3% -normalize -strip -type TrueColor -modulate 99,99 -colorspace sRGB -depth 16 -channel rgba -interlace Plane -gaussian-blur 0.05 -density 300 -strip +repage -deskew 40% -fuzz 50% -quality 100% -unsharp 2x2.5+2.7+01 $i ${i/.[jJpP][nNpP][gG]/-4k.webp}; rm ${i/}; done'
alias vim-remove-space='tput setaf 11; echo -e "Comandos simples para remover espaços em branco indesejados\n-----------------------------------------------------------\nEm uma pesquisa, \s encontra um espaço em branco (um espaço ou uma guia) e \+ encontra uma ou mais ocorrências.\n\nO comando a seguir exclui qualquer espaço em branco no final de cada linha. Se nenhum espaço em branco for encontrado, nenhuma alteração ocorre e o esinalizador significa que nenhum erro é exibido.\n\n:%s/\s\+$//e\n\nO seguinte exclui qualquer espaço em branco inicial no início de cada linha.\n\n:%s/^\s\+//e\n\nMesma coisa (:le = :left = left-align alinhar à esquerda dado intervalo; % = todas as linhas):\n:%le\n\nCom o mapeamento a seguir, um usuário pode pressionar F5 para excluir todos os espaços em branco à direita. A variável _sé usada para salvar e restaurar o último registro de padrão de pesquisa (assim, da próxima vez que o usuário pressionar n, ele continuará sua última pesquisa) e :nohlé usada para desligar o realce da pesquisa (para que os espaços finais não sejam realçados enquanto o usuário digita). O esinalizador é usado no comando substitute para que nenhum erro seja mostrado se o espaço em branco final não for encontrado. Ao contrário de antes, o texto de substituição deve ser especificado para usar o sinalizador necessário.\n\n:nnoremap <silent> <F5> :let _s=@/ <Bar> :%s/\s\+$//e <Bar> :let @/=_s <Bar> :nohl <Bar> :unlet _s <CR>\n\nSe você quiser remover todas as lihas em branco, use:\n\n:g/^\s*$/d\n\nSe quiser vírgulas. Assim: (:s///) em cada linha (%) para substituir todos (g) os espaços em branco contínuos (\s\+) por uma vírgula (,). Use:\n\n:%s/\s\+/,/g\n\nOutra maneira de fazer isso:\n\n:%s/\s\{1,}/,/gc\n\nAo converter um arquivo de texto com cabeçalhos e campos de texto com espaço. Use:\n\n:%s/\s\{2,}/,/g\n\nRemova espaços no meio da linha, e retire o excesso de tabulação:\n\n:%s/\([^ ]\+ \) \+/\1/g\n\nIsso pesquisará cada ocorrência que não tenha precedência em branco e substituirá o seguinte conjunto de espaços por apenas um espaço.\nIsso, no entanto, deixará um único espaço à direita nas linhas que tinham vários espaços à direita. Para corrigir isso, use o comando:\n\n:%s/ *$//"'
alias fonts-local="echo /data/data/com.termux/files/usr/share/fonts/TTF"
alias fonts="cd /data/data/com.termux/files/usr/share/fonts/TTF"
alias so="source /data/data/com.termux/files/home/.zshrc"
alias home-local="echo /data/data/com.termux/files/home"
alias home="cd /data/data/com.termux/files/home"
alias sdcard="cd /sdcard"
alias down="cd /sdcard/Download"
alias d="cd /sdcard/Download"
alias p="catt play_toggle"
alias c="catt cast"
alias s="catt save"
alias r="catt restore"
#alias vim="kak"
alias cs="catt stop"
alias r="catt rewind 60"
alias up="apt update && apt upgrade"
alias ud="apt update"
alias upd="apt update"
alias ug="apt upgrade"
alias upg="apt upgrade"
alias e="exit"
alias myssh="echo ssh facundes@192.168.1.66 ; ssh facundes@192.168.1.66"
alias sshrdp="echo ssh -qnN -L 3389:127.0.0.1:3389 192.168.1.66 ; ssh -qnN -L 3389:127.0.0.1:3389 192.168.1.66"
alias myssh="echo ssh facundes@192.168.1.66 ; ssh facundes@192.168.1.66"
alias igjssh="echo ssh iar3@192.168.1.84 ; ssh iar3@192.168.1.84"
alias rsync2ssh="echo rsync -avzh /sdcard/rsync facundes@192.168.1.66:/home/facundes ; rsync -avzh /sdcard/rsync facundes@192.168.1.66:/home/facundes"
alias ssh2send="echo scp file user@ip.x.x.x:/home/facundes"
